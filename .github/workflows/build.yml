name: Build Release

on: workflow_dispatch
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        path: DigitalAssistant
    - name: Clone BlazorBase
      uses: actions/checkout@v4
      with:
        repository: PALs-Software/BlazorBase
        ref: develop
        path: BlazorBase
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
      
    - name: Download linux arm64 wrapper artifact
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-wrapper-linux-arm64.yml
        path: Wrapper_Linux_arm64/

    - name: Download linux x86/x64 wrapper artifact
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-wrapper-linux-x86_64.yml
        path: Wrapper_Linux_x64/

    - name: Download windows wrapper artifact
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: build-wrapper-windows-x64.yml
        path: Wrapper_Windows_x64/

    - name: Test
      run: dotnet test "./DigitalAssistant/Tests/DigitalAssistant.Server.Tests/DigitalAssistant.Server.Tests.csproj" -c Release
      
    - name: Build Hue Connector
      run: dotnet publish "./DigitalAssistant/Connectors/DigitalAssistant.HueConnector/DigitalAssistant.HueConnector.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc/Connectors/DigitalAssistant.HueConnector /p:UseAppHost=false

    - name: Build Core Commands
      run: dotnet publish "./DigitalAssistant/Commands/DigitalAssistant.CoreCommands/DigitalAssistant.CoreCommands.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc/Commands/DigitalAssistant.CoreCommands /p:UseAppHost=false
    - name: Build Device Commands
      run: dotnet publish "./DigitalAssistant/Commands/DigitalAssistant.DeviceCommands/DigitalAssistant.DeviceCommands.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc/Commands/DigitalAssistant.DeviceCommands /p:UseAppHost=false
    - name: Build Music Commands
      run: dotnet publish "./DigitalAssistant/Commands/DigitalAssistant.MusicCommands/DigitalAssistant.MusicCommands.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc/Commands/DigitalAssistant.MusicCommands /p:UseAppHost=false
    
    - name: Build x64 CPU Server
      run: dotnet publish "./DigitalAssistant/Core/DigitalAssistant.Server/DigitalAssistant.Server.csproj" -c Release -o ${{ github.workspace }}/ReleaseServer64 /p:Platform=x64 /p:UseAppHost=false
    - name: Build Any CPU Server
      run: dotnet publish "./DigitalAssistant/Core/DigitalAssistant.Server/DigitalAssistant.Server.csproj" -c Release -o ${{ github.workspace }}/ReleaseServerAny /p:UseAppHost=false

    - name: Build Client
      run: dotnet publish "./DigitalAssistant/Core/DigitalAssistant.Client/DigitalAssistant.Client.csproj" -c Release -o ${{ github.workspace }}/ReleaseClient /p:UseAppHost=false
      
    - name: Configure Release Packages
      shell: pwsh
      run: |
        $basePathServer64 =  "${{ github.workspace }}/ReleaseServer64"
        $basePathServerAny =  "${{ github.workspace }}/ReleaseServerAny"
        $basePathClient =  "${{ github.workspace }}/ReleaseClient"
        $basePathMisc =  "${{ github.workspace }}/ReleaseMisc"
                
        $resultServerWindows64 =  "${{ github.workspace }}/ServerReleaseWindows64"
        $resultServerLinux64 =  "${{ github.workspace }}/ServerReleaseLinux64"
        $resultServerLinuxArm64 =  "${{ github.workspace }}/ServerReleaseLinuxArm64"
        $resultServerMac =  "${{ github.workspace }}/ServerReleaseMac"

        mkdir -p "$resultServerWindows64/"
        mkdir -p "$resultServerLinux64/"
        mkdir -p "$resultServerLinuxArm64/"
        mkdir -p "$resultServerMac/"

        Write-Host "Remove no longer required configuration files"
        Remove-Item -Path (Join-Path $basePathServer64 "appsettings.Development.json") -Force
        Remove-Item -Path (Join-Path $basePathServerAny "appsettings.Development.json") -Force
        Remove-Item -Path (Join-Path $basePathClient "appsettings.Development.json") -Force

        Write-Host "Copy wrapper"
        Copy-Item -Path "${{ github.workspace }}/Wrapper_Windows_x64/artifact/*" -Destination $resultServerWindows64 -Recurse
        Copy-Item -Path "${{ github.workspace }}/Wrapper_Linux_x64/artifact/*" -Destination $resultServerLinux64 -Recurse
        Copy-Item -Path "${{ github.workspace }}/Wrapper_Linux_arm64/artifact/*" -Destination $resultServerLinuxArm64 -Recurse

        Write-Host "Copy connectors and commands"
        Copy-Item -Path "${{ github.workspace }}/DigitalAssistant/Core/DigitalAssistant.Server/bin/Release/net8.0/Connectors" -Destination $basePathServer64 -Recurse
        Copy-Item -Path "${{ github.workspace }}/DigitalAssistant/Core/DigitalAssistant.Server/bin/Release/net8.0/Connectors" -Destination $basePathServerAny -Recurse
        Copy-Item -Path "${{ github.workspace }}/DigitalAssistant/Core/DigitalAssistant.Server/bin/Release/net8.0/Commands" -Destination $basePathServer64 -Recurse
        Copy-Item -Path "${{ github.workspace }}/DigitalAssistant/Core/DigitalAssistant.Server/bin/Release/net8.0/Commands" -Destination $basePathServerAny -Recurse
        
        Write-Host "Copy server binary files for different plattforms"
        Copy-Item -Path "$basePathServer64/*" -Destination $resultServerWindows64 -Recurse
        Copy-Item -Path "$basePathServer64/*" -Destination $resultServerLinux64 -Recurse
        Copy-Item -Path "$basePathServerAny/*" -Destination $resultServerLinuxArm64 -Recurse
        Copy-Item -Path "$basePathServerAny/*" -Destination $resultServerMac -Recurse

        Write-Host "Prepare Configurations"
        Remove-Item -Path (Join-Path $resultServerWindows64 "appsettings.Linux.json") -Force
        Remove-Item -Path (Join-Path $resultServerLinux64 "appsettings.json") -Force
        Rename-Item -Path (Join-Path $resultServerLinux64 "appsettings.Linux.json") -NewName "appsettings.json"
        Remove-Item -Path (Join-Path $resultServerLinuxArm64 "appsettings.json") -Force
        Rename-Item -Path (Join-Path $resultServerLinuxArm64 "appsettings.Linux.json") -NewName "appsettings.json"
        Remove-Item -Path (Join-Path $resultServerMac "appsettings.json") -Force
        Rename-Item -Path (Join-Path $resultServerMac "appsettings.Linux.json") -NewName "appsettings.json"
        
    - name: Publish client application artifact
      uses: actions/upload-artifact@v4
      with:
        name: ClientApplicationArtifact
        path: ReleaseClient/

    - name: Publish windows server application artifact
      uses: actions/upload-artifact@v4
      with:
        name: ServerApplicationArtifact_Windows
        path: ServerReleaseWindows64/

    - name: Publish linux server x64 application artifact
      uses: actions/upload-artifact@v4
      with:
        name: ServerApplicationArtifact_Linux_x64
        path: ServerReleaseLinux64/

    - name: Publish linux server arm64 application artifact
      uses: actions/upload-artifact@v4
      with:
        name: ServerApplicationArtifact_Linux_arm64
        path: ServerReleaseLinuxArm64/

    - name: Publish mac server application artifact
      uses: actions/upload-artifact@v4
      with:
        name: ServerApplicationArtifact_Mac
        path: ServerReleaseMac/

