name: Build Release

on: workflow_dispatch
  
jobs:

  build:
    name: Build Release Artifacts
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        path: DigitalAssistant
    - name: Clone BlazorBase
      uses: actions/checkout@v4
      with:
        repository: PALs-Software/BlazorBase
        ref: develop
        path: BlazorBase
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x  

    - name: Test
      run: dotnet test "./DigitalAssistant/Tests/DigitalAssistant.Server.Tests/DigitalAssistant.Server.Tests.csproj" -c Release
      
    - name: Build Hue Connector
      run: dotnet publish "./DigitalAssistant/Connectors/DigitalAssistant.HueConnector/DigitalAssistant.HueConnector.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc /p:UseAppHost=false

    - name: Build Core Commands
      run: dotnet publish "./DigitalAssistant/Commands/DigitalAssistant.CoreCommands/DigitalAssistant.CoreCommands.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc /p:UseAppHost=false
    - name: Build Device Commands
      run: dotnet publish "./DigitalAssistant/Commands/DigitalAssistant.DeviceCommands/DigitalAssistant.DeviceCommands.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc /p:UseAppHost=false
    - name: Build Music Commands
      run: dotnet publish "./DigitalAssistant/Commands/DigitalAssistant.MusicCommands/DigitalAssistant.MusicCommands.csproj" -c Release -o ${{ github.workspace }}/ReleaseMisc /p:UseAppHost=false
    
    - name: Build Server
      run: dotnet publish "./DigitalAssistant/Core/DigitalAssistant.Server/DigitalAssistant.Server.csproj" -c Release -o ${{ github.workspace }}/ReleaseServer /p:UseAppHost=false
    - name: Build Server with GPU Support
      run: dotnet publish "./DigitalAssistant/Core/DigitalAssistant.Server/DigitalAssistant.Server.csproj" -c Release_WithGpuSupport -o ${{ github.workspace }}/ReleaseServerWithGpuSupport /p:UseAppHost=false

    - name: Build Client
      run: dotnet publish "./DigitalAssistant/Core/DigitalAssistant.Client/DigitalAssistant.Client.csproj" -c Release -o ${{ github.workspace }}/ReleaseClient /p:UseAppHost=false
      
    - name: Configure and Zip Release Packages
      shell: pwsh
      run: |
        $basePathServer =  "${{ github.workspace }}/ReleaseServer"
        $basePathServerWithGpuSupport =  "${{ github.workspace }}/ReleaseServerWithGpuSupport"
        $basePathClient =  "${{ github.workspace }}/ReleaseClient"
        $basePathMisc =  "${{ github.workspace }}/ReleaseMisc"

        Write-Host "Remove no longer required configuration files"
        Remove-Item -Path (Join-Path $basePathServer "appsettings.Development.json") -Force
        Remove-Item -Path (Join-Path $basePathServerWithGpuSupport "appsettings.Development.json") -Force

        Write-Host "Copy connectors and commands"
        Copy-Item -Path "$basePathMisc/Publish/*" -Destination $basePathServer -Recurse
        Copy-Item -Path "$basePathMisc/Publish/*" -Destination $basePathServerWithGpuSupport -Recurse        
    
        Write-Host "Zip packages"
        Compress-Archive -Path "$basePathClient/*" -DestinationPath "${{ github.workspace }}/Client.zip"
        Compress-Archive -Path "$basePathServer/*" -DestinationPath "${{ github.workspace }}/Server.zip"
        Compress-Archive -Path "$basePathServerWithGpuSupport/*" -DestinationPath "${{ github.workspace }}/Server.With.Gpu.Support.zip"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Client Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/Client.zip
        asset_name: Client.zip
        asset_content_type: application/zip

    - name: Upload Server Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/Server.zip
        asset_name: Server.zip
        asset_content_type: application/zip

    - name: Upload Server with GPU Support Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/Server.With.Gpu.Support.zip
        asset_name: Server.With.Gpu.Support.zip
        asset_content_type: application/zip