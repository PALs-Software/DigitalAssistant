name: Create RPI Image (Server)

on: workflow_dispatch

permissions:
  actions: read
  
jobs:
  modify-rpi-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download client artifact
        id: download-client-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ github.token }}
          workflow: build-digital-assistant.yml
          workflow_conclusion: success
          branch: main
          name: ClientArtifact
          path: ${{ github.workspace }}/Artifacts/

      - name: Download server artifact
        id: download-server-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ github.token }}
          workflow: build-digital-assistant.yml
          workflow_conclusion: success
          branch: main
          name: ServerArtifact
          path: ${{ github.workspace }}/Artifacts/
        
      - name: Add digital assistant to Raspberry Pi OS Bookworm
        uses: dtcooper/rpi-image-modifier@v1
        id: create-image
        with:
          base-image-url: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
          image-path: 2024-07-04-raspios-bookworm-arm64-lite-modified-with-digital-assistant-server.img
          compress-with-xz: true
          cache: true
          mount-repository: true
          run: |
            echo "Install modules..."
            apt-get update
            apt-get install -y openssl
            apt-get install -y tree
            apt-get install unzip
            
            wget https://dot.net/v1/dotnet-install.sh -O dotnet-install.sh
            chmod +x ./dotnet-install.sh
            ./dotnet-install.sh --channel 8.0 --runtime aspnetcore
  
            echo "Prepare server application"
            mkdir -p /home/pi/DigitalAssistantServer/bin/
            mkdir -p /home/pi/DigitalAssistantServer/Database/
            mkdir -p /home/pi/DigitalAssistantServer/Certificates/
            mkdir -p /home/pi/DigitalAssistantServer/Models/
            mkdir -p /home/pi/DigitalAssistantServer/DigitalAssistant.Server_FileStore/
            chown -R pi:pi /home/pi/DigitalAssistantServer

            echo "Unzip binaries and copy configuration"
            unzip /mounted-github-repo/Artifacts/Server.zip -d /home/pi/DigitalAssistantServer/bin
            cp /mounted-github-repo/Scripts/Build/Assets/rpi-server-appsettings.json /home/pi/DigitalAssistantServer/bin/appsettings.Linux.json
            
            echo "Create certificate"
            chmod +x /mounted-github-repo/Scripts/Build/Assets/rpi-create-certificates.sh
            /mounted-github-repo/Scripts/Build/Assets/rpi-create-certificates.sh

            echo "Configure auto start"
            cp /mounted-github-repo/Scripts/Build/Assets/rpi-digital-assistant-server.service /etc/systemd/system/
            systemctl enable rpi-digital-assistant-server.service
            
            echo "Show file structure"
            tree /home/pi/DigitalAssistantServer/
            
            echo "Modifications finished..."
            
      - name: Print outputs
        shell: bash
        run: |
          echo 'image-path: ${{ steps.create-image.outputs.image-path }}'
          echo 'image-size: ${{ steps.create-image.outputs.image-size }}'
          echo 'image-sha256sum: ${{ steps.create-image.outputs.image-sha256sum }}'
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: raspios-with-digital-assistant-server
          path: ${{ steps.create-image.outputs.image-path }}
          if-no-files-found: error
          retention-days: 2
          compression-level: 0  # Already compressed with xz above
